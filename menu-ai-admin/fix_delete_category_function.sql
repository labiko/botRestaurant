-- üîß CORRECTION FONCTION SUPPRESSION CAT√âGORIE
-- ===============================================
-- Bug : La suppression supprime les options de tous les produits
-- Fix : Filtrage strict par category_id pour ne supprimer que les options des produits de la cat√©gorie cibl√©e

-- Supprimer l'ancienne fonction d√©faillante (si elle existe)
DROP FUNCTION IF EXISTS public.delete_category_complete(integer, integer);

-- Cr√©er la nouvelle fonction s√©curis√©e avec filtrage correct
CREATE OR REPLACE FUNCTION public.delete_category_complete(
  p_category_id INTEGER,
  p_restaurant_id INTEGER
)
RETURNS JSON
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
  v_category_name VARCHAR;
  v_deleted_products INTEGER := 0;
  v_deleted_options INTEGER := 0;
  v_deleted_composite_items INTEGER := 0;
  v_products_to_delete INTEGER[];
BEGIN
  -- üîí S√âCURIT√â : V√©rifier que la cat√©gorie appartient au restaurant
  SELECT name INTO v_category_name
  FROM france_menu_categories
  WHERE id = p_category_id AND restaurant_id = p_restaurant_id;

  IF v_category_name IS NULL THEN
    RETURN json_build_object(
      'success', false,
      'error', 'Cat√©gorie non trouv√©e ou acc√®s interdit'
    );
  END IF;

  -- üéØ √âTAPE 1: R√©cup√©rer UNIQUEMENT les produits de cette cat√©gorie
  SELECT ARRAY(
    SELECT id
    FROM france_products
    WHERE category_id = p_category_id
      AND restaurant_id = p_restaurant_id
  ) INTO v_products_to_delete;

  -- üìä LOG: Produits qui vont √™tre supprim√©s
  RAISE NOTICE 'üóëÔ∏è Produits √† supprimer pour cat√©gorie % (restaurant %): %', p_category_id, p_restaurant_id, v_products_to_delete;

  -- üî• √âTAPE 2: Supprimer les options UNIQUEMENT pour les produits de cette cat√©gorie
  DELETE FROM france_product_options
  WHERE product_id = ANY(v_products_to_delete);

  GET DIAGNOSTICS v_deleted_options = ROW_COUNT;
  RAISE NOTICE '‚úÖ Options supprim√©es: %', v_deleted_options;

  -- üî• √âTAPE 3: Supprimer les √©l√©ments composites UNIQUEMENT pour les produits de cette cat√©gorie
  DELETE FROM france_composite_items
  WHERE composite_product_id = ANY(v_products_to_delete);

  GET DIAGNOSTICS v_deleted_composite_items = ROW_COUNT;
  RAISE NOTICE '‚úÖ √âl√©ments composites supprim√©s: %', v_deleted_composite_items;

  -- üî• √âTAPE 4: Supprimer les produits de cette cat√©gorie
  DELETE FROM france_products
  WHERE category_id = p_category_id
    AND restaurant_id = p_restaurant_id;

  GET DIAGNOSTICS v_deleted_products = ROW_COUNT;
  RAISE NOTICE '‚úÖ Produits supprim√©s: %', v_deleted_products;

  -- üî• √âTAPE 5: Supprimer la cat√©gorie
  DELETE FROM france_menu_categories
  WHERE id = p_category_id
    AND restaurant_id = p_restaurant_id;

  RAISE NOTICE '‚úÖ Cat√©gorie "%s" supprim√©e compl√®tement', v_category_name;

  -- üìä Retourner le r√©sultat d√©taill√©
  RETURN json_build_object(
    'success', true,
    'message', format('Cat√©gorie "%s" supprim√©e avec succ√®s', v_category_name),
    'deleted', json_build_object(
      'category', v_category_name,
      'products', v_deleted_products,
      'options', v_deleted_options,
      'composite_items', v_deleted_composite_items
    )
  );

EXCEPTION
  WHEN OTHERS THEN
    -- üö® Rollback automatique en cas d'erreur
    RAISE NOTICE '‚ùå Erreur suppression cat√©gorie: %', SQLERRM;
    RETURN json_build_object(
      'success', false,
      'error', format('Erreur lors de la suppression: %s', SQLERRM)
    );
END;
$$;

-- üîê Accorder les permissions
GRANT EXECUTE ON FUNCTION public.delete_category_complete(INTEGER, INTEGER) TO anon;
GRANT EXECUTE ON FUNCTION public.delete_category_complete(INTEGER, INTEGER) TO authenticated;

-- ‚úÖ Test de s√©curit√© de la fonction
-- Cette requ√™te permet de v√©rifier que la fonction filtre bien par cat√©gorie
-- SELECT public.delete_category_complete(1, 1); -- TEST: remplacer par de vraies valeurs

-- üìù NOTES IMPORTANTES:
-- 1. La fonction utilise maintenant v_products_to_delete pour ne supprimer que les bonnes options
-- 2. Filtrage strict par restaurant_id ET category_id partout
-- 3. Logs d√©taill√©s pour debug (RAISE NOTICE)
-- 4. Transaction implicite : tout r√©ussit ou tout √©choue
-- 5. Plus de suppression d'options d'autres cat√©gories !